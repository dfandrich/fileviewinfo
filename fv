#!/bin/sh
# fv - archive and package directory lister
# Placed into the public domain by Dan Fandrich <dan@coneharvesters.com>
# See the file COPYING for details of how CC0 applies to this file.
#
# Format of archive entries in this file:
#
# * The requires: comment lines below the archive name refer to the
#   software package(s) required to view the content list of the archive
#   (RedHat package names are listed in most cases).  This information is not
#   currently used by the program but is merely a note to the curious user
#   who wants to know how to look inside a new archive type.
#
# * An archive_label line must be found within the code handling each
#   archive type.  Any special shell characters must be enclosed in single
#   quotes.  These lines are listed (along with the Also lines) using the
#   -v -l option.
#
# * A comment line beginning See gives a URL with more information about
#   the archive format. This information is not currently used by
#   the program but is merely a note to the curious user.
#
# * A comment line beginning Also gives an alternative archive name for the
#   following archive type similar to the format of archive_label, except
#   that the comment ends with the file extension and special shell characters
#   must not be quoted.  These lines are listed along with the archive_label
#   lines using the -v -l option.
#
# * Each case entry line matching a file extension must have a tab character
#   in the first position.  These extensions are listed using the -l option.

usage () {
	echo 'fv ver. 3-dev'
	echo 'Displays directory listings for many archive types.'
	echo ''
	echo 'Usage: fv [-v] [-?] [-h] [-l] [-t type] archive1 [ archive2 ... ]'
	echo '  -v     Show verbose output (more than once for more verbosity)'
	echo '  -h,-?  Show this help'
	echo '  -l     List supported file extensions (or file types with -v)'
	echo '  -t     Treat the archives as having the specified file extension'
	exit 3
}

if [ X"$1" = X"-v" ] ; then
	FV_VERBOSE=1
	shift
	if [ X"$1" = X"-v" ] ; then
		FV_VERBOSE=2
		shift
	fi
fi

if [ $# -eq 0 -o X"$1" = X"-?" -o X"$1" = X"-h"  ] ; then
	usage
fi

if [ X"$1" = X"-l" ] ; then
	# requires: textutils, sed
	if [ X"$FV_VERBOSE" != X ] ; then
		# Scan this script looking for archive label lines and Also comments
		sed -n -e "s/'//g" -e 's/^[^#]\+archive[_]label //p' \
		 -e 's/^[ 	]*# Also \(.*\) [\.a-z0-9A-Z,_]*$/\1/p' "$0" | sort -f | uniq
	else
		echo 'Supported file extensions:'
		# Scan this script looking for wildcard case statement entries
		sed -n -e 's/^[ 	][ 	]*\(\*[^#)]*\)[)\\].*$/\1/p' "$0" | sed -e 's/ *| */\
/g' | sed -e 's/\*//g' -e '/^\**$/d' | sort -f | uniq | fmt
	fi
	exit
fi

staticfiletype=""
if [ X"$1" = X"-t" ] ; then
	staticfiletype="$2"
	# Make sure file type starts with . for comparision purposes
	case "$staticfiletype" in
		.*) ;;
		 *)	staticfiletype=".$staticfiletype"
		    ;;
	esac
	shift
	shift
fi

if [ $# -eq 0 ] ; then
	usage
fi

archive_label () {
	# Display the archive name in verbose mode
	if [ X"$FV_VERBOSE" != X ] ; then
		echo "$*"
		if [ X"$FV_VERBOSE" = X2 ] ; then
		  # echo the actual command used to display the archive
		  set -x
		fi
	fi
}

for f in "$@" ; do
	if [ X"$staticfiletype" = X"" ] ; then
		filetype=`basename "$f"`
	else
		filetype="$staticfiletype"
	fi
	echo "$f":
	case "$filetype" in
		# See http://p7zip.sourceforge.net/
		# requires: p7zip
		*.7z)	archive_label 7zip archive
			7za l -- "$f"
			;;

		# requires: binutils
		*.a | *.sa)	archive_label ar archive
			ar tv "$f"
			;;

		# requires: linunace
		*.ace)	archive_label ACE archive
			unace v "$f"
			;;

		# See http://www.kipple.pe.kr/win/unalz/ (defunct as of 2021)
		# requires: unalz
		*.alz)	archive_label ALZ archive
			unalz -l "$f"
			;;

		# See https://github.com/AppImage/AppImageKit
		# requires: appimagetool
		*.AppImage)	archive_label AppImage package
			appimagetool --list "$f"
			;;

		# requires: arc
		*.arc)	archive_label SEA ARC archive
			arc v "$f"
			;;

		# requires: nspark
		# Extension is really .arc, but that conflicts with SEA ARC
		*.spark)	archive_label 'Archimedes Spark archive (RiscOS)'
			nspark -l -v "$f"
			;;

		# requires: unarj || arj
		*.arj)	archive_label ARJ archive
			unarj l "$f" || arj l "$f"
			;;

		# See http://www.star.le.ac.uk/~tjg/bun/ (defunct as of 2021)
		# requires: bun
		# (Untested)
		*.bun)	archive_label BUN archive
			bun tv "$f"
			;;

		# requires: cabextract
		*.cab)	archive_label Microsoft Cabinet archive
			cabextract -l -- "$f"
			;;

		# See http://wiki.conary.com/wiki/Conary (defunct as of 2021)
		# requires: conary
		*.ccs)	archive_label Conary Change Set
			conary showcs --info --all --all-troves --trove-headers --info --lsl --no-recurse "$f"
			;;

		# snd+gfx--see sasteroids
		*.cf)	archive_label Compound File Compiler archive
			cvf "$f"
			;;

		# requires: chmlib
		*.chm)	archive_label Microsoft Compressed HTML
			enum_chmLib "$f"
			;;

		# requires: cpio, gzip
		*.cpio.gz | *.cpio.Z | *.cpio.z | *.cgz)	
			archive_label compressed cpio archive
			gzip -dc -- "$f" | cpio --list --verbose
			;;

		# requires: cpio, bzip2
		*.cpio.bz2)	archive_label bzip2-compressed cpio archive
			bzip2 -dc -- "$f" | cpio --list --verbose
			;;

		# requires: cpio
		*.cpio)	archive_label cpio archive
			cpio --list --verbose < "$f"
			;;

		# See http://dar.linux.free.fr/
		# requires: dar
		# (Untested)
		# May need `basename "`basename "$f"`"`
		*.dar)	archive_label Disk Archiver archive
			dar -l "$f"
			;;

		# requires: binutils, gzip, tar, xz
		# On a Debian system, this should use 'dpkg -c "$f"' instead
		# Also OpenMoko package .opk
		*.deb | *.opk)  archive_label Debian distribution archive
			ar p "$f" data.tar.gz | gzip -dc | tar tvf - || ( ar p "$f" data.tar.xz | xz -dc | tar tvf - )
			;;

		# See https://github.com/sgan81/apfs-fuse
		# requires dmg2img, kpartx, apfs_fuse
		*.dmg)	archive_label Apple disk image
			FVTMPDIR="$(mktemp -d)"
			dmg2img "$f" "$FVTMPDIR/image.img"
			DMGDEVICE="$(sudo kpartx -asrv "$FVTMPDIR/image.img" | awk '/^add map/ {print "/dev/mapper/" $3}')"
			if [ -z "$FVTMPDIR" -o -z "$FVTMPDIR" ] ; then
				echo "Error: cannot manipulate DMG file; are dmg2img and kpartx installed?"
				# Indicate that an error has occurred
				false
			else
				mkdir "$FVTMPDIR/mnt"
				# The kernel itself can mount an HFS dmg, so use apfs-fuse only if that fails
				sudo mount -r "$DMGDEVICE" "$FVTMPDIR/mnt" 2>/dev/null || sudo apfs-fuse -o allow_other "$DMGDEVICE" "$FVTMPDIR/mnt"
				(cd "$FVTMPDIR/mnt" && find . -exec ls -ld {} +)
				# clean up
				sudo umount "$FVTMPDIR/mnt"
				sudo kpartx -d "$FVTMPDIR/image.img"
				rm -f "$FVTMPDIR/image.img"
				rmdir -p "$FVTMPDIR"/* 2>/dev/null
			fi
			;;

		# See http://www.handhelds.org/ (defunct as of 2021)
		# requires: binutils, file, grep, gzip, tar
		*.ipk)	archive_label Itsy package
			# Detect the old or new style ipk format
			if file "$f" | egrep -iq 'Debian|ar archive' ; then
				ar -p "$f" data.tar.gz | gzip -dc | tar tvf -
			else
				# Internal file name may or may not be prefixed with ./
				# which is what the \* catches.
				gzip -dc -- "$f" | tar xOf - --wildcards \*data.tar.gz | gzip -dc | tar tvf -
			fi
			;;

		# requires: binutils, gzip, tar
		# Also Ruby package .gem
		*.gem)	archive_label Ruby package
			tar xOf - data.tar.gz < "$f" | gzip -dc | tar tvf -
			;;

		# I've forgotten what this is
		*.ha)	archive_label ha archive
			ha l "$f"
			;;

		# requires: sed
		*.hp)	archive_label HP48 distribution archive as posted to comp.sources.hp48
			sed -n -e 's/^\(BEGIN_.*\) /\1	/p' < "$f"
			;;

		# requires: macutils
		*.hqx)	archive_label Macintosh BinHex encoding
			hexbin -il "$f"
			;;

		# requires: cdrecord
		*.iso)	archive_label ISO9660 filesystem image file
			isoinfo -l -R -i "$f"
			;;

		# requires: mtd-utils
		# This just dumps file names without directory structure, but it's
		# better than nothing
		*.jffs2)	archive_label JFFS2 filesystem image file
			jffs2dump -c "$f" | sed -n 's/^.*, name //p'
			;;

		# See http://rus.members.beeb.net/lbrate.html (defunct as of 2021)
		# requires: lbrate
		*.lbr)	archive_label CP/M LBR archive
			lbrate -vl "$f"
			;;

		# requires: lha
		*.lha | *.lzh)	archive_label LHARC archive
			lha v -- "$f"
			;;

		# requires: lzip
		*.lz)	archive_label LZIP compressed file
			lzip -lv -- "$f"
			;;

		# See https://www.lzop.org/
		# requires: lzop
		*.lzo)	archive_label LZOP compressed file
			lzop -vl -- "$f"
			;;

		# (Is .mac the most common suffix for MacBinary files?)
		# requires: macutils
		*.mac)	archive_label Macintosh MacBinary encoding
			macsave -il < "$f"
			;;

		# Found this one on SCO UNIX
		# (Don't know what kind of suffix this one uses)
		# (Untested)
		#*.mar)	archive_label Message catalogue archive
		#	mar tv "$f"
		#	;;

		# See http://www.emantic.co.uk/mark/ (defunct as of 2021)
		# requires: mar
		# (Untested)
		*.mar)	archive_label Meta Archive
			mar -t "$f"
			;;

		# See http://www.dakotacom.net/~donut/programs/par2ls.html (defunct as of 2021)
		# requires: par2ls
		# (Untested)
		*.par2)	archive_label Parity Archive ver. 2
			par2ls "$f"
			;;

		# requires: poppler
		*.pdf) archive_label Portable Document Format document
			pdfimages -list -- "$f"
			pdfdetach -list -- "$f"
			;;

		# See http://www.pcbsd.org/ (defunct as of 2021)
		# requires: tar, sed, bzip2
		*.pbi) archive_label PC-BSD package
			sed '1,/^__PBI_ARCHIVE__$/d' < "$f" | bzcat | tar xOf - Package.tar | tar tvf -
			;;

		# (Don't know what kind of suffix this one uses)
		# (Untested)
		*.pkg)	archive_label 'SysV package (SCO UNIX, IRIX)'
			pkginfo -d "`dirname "$f"`" -l "`basename "$f"`"
			;;

		# See http://en.pardus-wiki.org/Package-manager (defunct as of 2021)
		# requires: lzma, tar, unzip
		*.pisi)	archive_label Pardus package
			unzip -q -c  -- "$f" install.tar.lzma | lzma -dc | tar -tvf -
			;;

		# See http://mattmahoney.net/dc/
		# See https://sourceforge.net/projects/kgbarchiver/
		# Also KGB archive .kgb
		*.pq6 | *.kgb)	archive_label PAQ6 compressed archive
			sed '//,$d' < "$f"
			;;

		# See https://www.puppylinux.com/
		# requires: gzip, tar, unzip
		*.pup)
			archive_label Puppy Linux package
			if unzip -l -- "$f" dotpop.tar.gz >/dev/null; then
				unzip -p -- "$f" dotpup.tar.gz | gzip -dc | tar tvf -
			else
				unzip -lv -- "$f"
			fi
			;;

		# requires: unrar
		# Also SNES sound archive .rsn
		*.rar | *.rsn)	archive_label RAR compressed archive
			unrar v -idc "$f"
			;;

		# See https://www.rpm.org/
		# requires: rpm
		*.rpm | *.spm)	archive_label Red Hat RPM package
			rpm -qilvp -- "$f"
			;;

		# (Obsolete format; from Red Hat Linux distributions < 4.0)
		# See https://www.redhat.com/
		# requires: tar, cpio, gzip
		*.rpp)	archive_label Red Hat RPP package
			tar xOf - cpio-archive.gz < "$f" | gzip -dc | cpio --list --verbose
			;;

		# See https://rzip.samba.org/
		# requires: python >= 3
		*.rz)	archive_label rzip archive
			python3 - "$f" <<EOF
import struct, sys, os
fn=sys.argv[1]
with open(fn, 'rb') as f:
	magic,ver1,ver2 = struct.unpack('4sBB', f.read(6))
	if magic!=b'RZIP': print('Not an rzip archive', file=sys.stderr); sys.exit(1);
	length = struct.unpack('!II', f.read(8))
basefn=os.path.basename(fn).rsplit('.')[0]
print('rz ver    length filename')
print('%2d.%02d %10d %s' % (ver1,ver2, length[1] * 0x100000000 + length[0], basefn))
EOF
			;;

		# See https://sourceforge.net/projects/sistk/
		# requires: DumpSIS
		*.sis)	archive_label SymbianOS SIS installable package
			DumpSIS.pl -t -- "$f"
			;;

		# requires: macutils
		*.sit)	archive_label Macintosh StuffIt archive
			macunpack -il "$f"
			;;

		# There are many kinds of shar archives with greatly differing
		# formats. This code attempts to find a manifest listing in the
		# comments at the top of the file in several different formats.
		# requires: sed
		*.shar | *.sh)	archive_label shell archive
			# display warning
			echo 'NOTE: shar contents listing is not completely reliable'
			# GNU shar 4.1
			sed -n -e '1,/^# This shar contains/d' -e '/^#$/,$d' -e 's/^# //p' < "$f"
			# shar type A
			sed -n -e '1,/with \/bin\/sh/d' -e '/^#$/,$d' -e 's/^#[ 	]/	/p' < "$f"
			# shar type B
			sed -n -e '/^#/!d' -e '/^# end of/d' -e 's/^#[ 	]//' -e '/^Contents/,$p' < "$f"
			;;

		# See https://nulib.com/
		# requires: nulib
		*.shk | *.sh2 | *.sdk | *.bxy)	archive_label Apple II archive
			nulib tv "$f"
			;;

		# *.cbmarc extension is .arc, but that conflicts with SEA ARC
		# requires: fvcbm
		# *.lzh and *.lha can be handled by fvcbm, but are taken care of
		# by lha above
		# *.lbr types conflict and are taken care of earlier
		*.sda | *.sfx | *.d64 | *.x64 | *.t64 | *.lnx | \
		*.n64 | *.lbr | *.[psrud]00 | \
		*.cbmarc)	archive_label Commodore 64 archive
			fvcbm "$f"
			;;

		# See https://github.com/plougher/squashfs-tools
		# requires: squashfs
		*.sqsh | *.squashfs) archive_label Squashfs filesystem image
			unsquashfs -ll "$f"
			;;

		# gzip-compressed tar archive .tar.gz
		# Also Netscape package .nif
		# Also eCos package .epk
		# Also QNX package .qpk
		# Also QNX package archive .qpr
		# Also Frugalware package .fpm
		# Also HP-UX package .depot.gz
		# Also Rubix package .rub
		# Also KWord Document .kwd
		# Also KSpread Spreadsheet .ksp
		# Also KPresenter Document .kpr
		# Also KChart Chart .chrt
		# Also KFormula Document .kfo
		# Also Kivio Document .flw
		# Also Kontour Illustration .kil
		# requires: tar, gzip
		*.nif | *.epk | *.qpk | *.qpr | *.depot.gz | *.fpm | *.rub | \
		*.kpr | *.chrt | *.kfo | *.flw | *.kil | *.ksp | *.kwd | \
		*.tar.z | *.tar.Z | *.tar.gz | *.tgz | *.taz) 
			archive_label gzip-compressed tar archive
			gzip -dc -- "$f" | tar tvf -
			;;

		# lzip-compressed tar archive .tar.lz
		# requires: tar, lzip
		*.tar.lz)
			archive_label lzip-compressed tar archive
			lzip -dc -- "$f" | tar tvf -
			;;

		# zstd-compressed tar archive .tar.zst
		# requires: tar, zstd
		*.tar.zst)
			archive_label zstd-compressed tar archive
			zstd -dc -- "$f" | tar tvf -
			;;

		# .pet gets its own entry to give gzip the -q option; otherwise it
		# complains about the CRC tacked on to the end
		# requires: tar, gzip
		*.pet) 
			archive_label Puppy Linux Extra Treats package
			gzip -qdc -- "$f" | tar tvf -
			;;

		# bzip2-compressed tar archive .tar.bz2, .tbz, .tbz2
		# Also Stampede Linux package .slp
		# requires: tar, bzip2
		*.slp | \
		*.tar.bz2 | *.tbz | *.tbz2) archive_label bzip2-compressed tar archive
			bzip2 -dc -- "$f" | tar tvf -
			;;

		# requires: tar, xz
		*.tar.xz | *.txz)
			archive_label xz-compressed tar archive
			xz -dc -- "$f" | tar tvf -
			;;

		# tar archive .tar
		# Also tardist IRIX package .tardist
		# Also Lua package .lpkg
		# Also stopmotion movie .sto
		# Also HP-UX package .depot
		# requires: tar
		*.tar | *.tardist | *.lpkg | *.sto | *.depot)	archive_label tar archive
			tar tvf - < "$f"
			;;

		# See http://www.encode.ru/tc/
		# requires: python >= 3
		*.tc)	archive_label tc-compressed file
			python3 - "$f" <<EOF
import struct, sys, os
fn=sys.argv[1]
with open(fn, 'rb') as f:
	length = struct.unpack('<I', f.read(4))[0]
basefn=os.path.basename(fn).rsplit('.')[0]
print('    length filename')
print('%10d %s' % (length, basefn))
EOF
			;;

		# Also Tukaani Linux package .tlz
		# requires: lzma, tar
		*.tlz | *.tar.lzma)	archive_label LZMA compressed tar archive
			lzma -dc -- "$f" | tar tvf -
			;;

		# See https://www.denx.de/wiki/U-Boot/
		# requires: coreutils, cpio, gzip
		*.uRamdisk)	archive_label U-boot ramdisk image
			tail -c +65 < "$f" | gzip -dc | cpio -t -v
			;;

		# See https://jmtd.net/doom/
		# requires: lswad
		*.wad)	archive_label Doom WAD archive
			lswad "$f"
			;;

		# See http://tnef.sourceforge.net/
		# requires: tnef
		# (Untested)
		*winmail.dat)	archive_label Microsoft TNEF e-mail attachment
			tnef -t "$f"
			;;

		# requires: sed
		*.uu | *.uue | *.uua)	archive_label uuencoded file
			sed -n 's/^begin //p' < "$f"
			;;

		# See http://xar.googlecode.com/ (defunct as of 2021)
		# requires: xar
		*.xar)	archive_label XAR archive
			xar -t -f "$f"
			;;

		# zip archive .zip
		# Also Android package .apk
		# Also Java jar file .jar
		# Also Mozilla Java Cross Platform Installer .xpi
		# Also Perl package .par
		# Also Winamp compressed skin file .wsz,.wal
		# Also Google Earth .kmz
		# Also iPod Game .ipg
		# Also OpenOffice Impress Presentation .sxi
		# Also OpenOffice Drawing .sxd
		# Also OpenOffice Writer Document .sxw
		# Also OpenDocument Document .odt
		# Also OpenDocument Chart .odc
		# Also OpenDocument Database .odb
		# Also OpenDocument Drawing .odg
		# Also OpenDocument Spreadsheet .ods
		# Also OpenDocument Presentation .odp
		# Also OpenDocument Formula .odf
		# Also OpenDocument Drawing Template .otg
		# Also OpenDocument Presentation Template .otp
		# Also OpenDocument Spreadsheet Template .ots
		# Also OpenDocument Presentation Template .otp
		# Also Quake3 packed file .pk3
		# Also Nokia mobile phone theme .nth
		# Also Microsoft Office Open XML .docx
		# Also Microsoft Office Open XML with Macros .docm
		# Also EPub Document .epub
		# Also Java Web Start .war
		# Also XML Paper Specification .xps
		# Also Syllable resource package .resource
		# Also Syllable application package .application
		# Also (unknown 3D package) .f3d
		# Also Python package .egg
		# Also Python wheel package .whl
		# Also Krita image .kra
		# Also 3-D Manufacturing format .3mf
		# Also Scratch Project .sb2
		# Also Scratch Project .sb3
		# Also OpenRaster image .ora
		# SkyOS .pkg file are in .zip format, but the extension conflicts
		# requires: unzip
		*.zip | *.jar | *.xpi | *.par | *.wsz | *.wal | *.kmz | \
		*.sxi | *.sxd | *.sxw | *.pk3 | *.ipg | *.nth | *.odt | \
		*.ods | *.odp | *.odg | *.odf | \
		*.otp | *.otg | *.ots | *.odb | *.odc | \
		*.docx | *.epub | *.apk | *.war | *.xps | *.resource | \
		*.application | *.docm | *.f3d | *.egg | *.kra | *.whl | *.3mf | \
		*.sb2 | *.sb3 | *.ora)
			archive_label ZIP archive
			unzip -v -- "$f"
			;;

		# requires: zoo
		*.zoo)	archive_label ZOO archive
			zoo -list "$f"
			;;

		# See http://mattmahoney.net/dc/zpaq.html
		# requires: zpaq
		*.zpaq)	archive_label ZPAQ compressed archive
			zpaq l "$f"
			;;

		# See https://archives.damiendebin.net/zzip/
		# requires: zzip
		# (Untested)
		*.zz)	archive_label ZZIP archive
			zzip l "$f"
			;;

# General extensions that are used more specifically above

		# See https://liballeg.org/
		# requires: allegro4
		*.dat)	archive_label Allegro4 not packed datafile
			# There is also a packed Allegro4 datafile type with the same
			# extension, but there seems to be no metadata within the file to
			# display without uncompressing the file.
			dat -l -v -- "$f"
			;;

# Compressed files must come after compressed archives

		# requires: fileutils, textutils, sh-utils, awk
		*.bz2)	archive_label bzip2-compressed file
		    if [ -e "$f" ] ; then
				echo "method  crc      date           compressed uncompressed_name"
				FILEINFO=`env LC_ALL=C ls -l "$f"`
				#FILESIZE=`echo "$FILEINFO" | cut -c 30-42`
				FILESIZE=`echo "$FILEINFO" | awk '{print $5}'`
				#FILEDATE=`echo "$FILEINFO" | cut -c 43-54`
				FILEDATE=`echo "$FILEINFO" | awk '{print $6 " " $7 " " $8}'`
				FILENAME=`basename "$f" .bz2`
				#FILECRC=`od -A n -j 10 -N 4 -t x1 "$f" | sed "s/ //g"`
				FILECRC=`hexdump -e '4/1 "%02x" "\n"' -n 4 -s 10 < "$f"`
				#FILECOMPRESS=`od -A n -j 3 -N 1 -t c "$f" | sed "s/ //g"`
				FILECOMPRESS=`hexdump -e '"%_c" "\n"' -n 1 -s 3 < "$f"`
				printf "bzip2-%s %8s %s %13s %s" "$FILECOMPRESS" "$FILECRC" "$FILEDATE" "$FILESIZE" "$FILENAME"
			else
				echo "$f: No such file or directory"
			fi
			;;

		# requires: gzip
		*.gz | *.Z | *.z)	archive_label gzip-compressed file
			gzip -vl -- "$f"
			;;

		# See https://www.7-zip.org/sdk.html
		# requires: lzma || python >= 3
		*.lzma)	archive_label LZMA compressed file
		    if which lzmainfo  >/dev/null 2>&1 ; then
				lzmainfo -- "$f"
		    else
				python3 - "$f" <<EOF
import struct, sys, os, math
fn=sys.argv[1]
with open(fn, 'rb') as f:
	prop=f.read(1) # properties
	dict,length = struct.unpack('<Iq', f.read(12))
basefn=os.path.basename(fn).rsplit('.')[0]
print('dict    length filename')
print('%2d %11d %s' % (math.log(dict)/math.log(2),length,basefn))
EOF
			fi
			;;

		# requires: xz
		*.xz)	archive_label xz-compressed file
			xz -vl -- "$f"
			;;

		# requires: zstd
		*.zst) archive_label zstd-compressed file
			zstd -l -- "$f"
			;;

		# Unknown format
		# requires: file
		*)	echo "$filetype: Unsupported archive format." 1>&2
			if [ X"$FV_VERBOSE" != X ] ; then
				file "$f" 1>&2
			fi
			# Indicate that an error has occurred
			false
			;;

	esac
	if [ X"$FV_VERBOSE" = X2 ] ; then
	  set +x
	fi
	# Save the return code of the last program run so we can return that from
	# the script. This won't work for some of the archive listers, but it's
	# better than nothing.
	rc=$?
	echo ""
done
exit $rc
