#!/bin/sh
# fv - archive and package directory lister
# Place into the public domain by Dan Fandrich <dan@coneharvesters.com>
# $Id: fv,v 1.6 2004/07/10 22:51:32 dan Exp $
#
# $Log: fv,v $
# Revision 1.6  2004/07/10 22:51:32  dan
# Added untested extensions .bun .dar .mar (different) .par .par2 .spark .zz
# Improved .deb .ipk
# Made -l work on a greater variety of systems
#
# Revision 1.5  2004/07/08 05:49:01  dan
# Added file extensions .sis .chm .slp .ace
# Added -l option to display supported file extensions.
#
# Revision 1.4  2003/06/03 06:16:48  dan
# Added old .ipk style.
# Added .qpk, .cpio.bz2
# Extract temporary achives in /tmp
#
# Revision 1.3  2003/04/02 07:23:15  dan
# Changed return code for argument error.
#
# Revision 1.2  2003/04/02 06:37:53  dan
# Bumped version number to 1.1.
# Exit with the archive list command exit code (in most cases).
# Added many archive types.
# Added comments about package dependencies for displaying each archive type.
#
# 96-11-23  ver. 1.0  Dan Fandrich  first public release
# 95-11-23  ver. 0.1  Dan Fandrich  <dan@fch.wimsey.bc.ca> created
#
# The requires: lines below the archive name refer to the package(s) required
# by fv to list the archive contents (RedHat package names are listed in
# most cases).
#
# TO DO:
#  - look into PMS package system for BOGUS Linux distribution
#  - look into POSIX package tools (e.g. for Linux-FT)
#  - look into tnef or ytnef (at sf.net) for MS TNEF format listing

if [ $# -eq 0 -o X"$1" = X"-?" ] ; then
	echo 'fv ver. 1.1.3'
	echo 'Usage: fv [-l] archive1 [ archive2 ... ]'
	echo 'Displays directories of many archive types.'
	exit 3
fi

if [ X"$1" = X"-l" ] ; then
	# requires: textutils, sed
	echo 'Supported file extensions:'
	# Scan this script looking for wildcard case statement entries
	sed -n -e 's/^[ 	][ 	]*\(\*[^#)]*\)[)\\].*$/\1/p' "$0" | sed -e 's/ *| */\
/g' | sed -e 's/\*//g' -e '/^\**$/d' | sort -f | fmt
	exit
fi

for f in "$@" ; do
	echo "$f":
	case "$f" in
		# ar(1) archive
		# requires: binutils
		*.a | *.sa)
			ar tv "$f"
			;;

		# ACE archive <http://www.winace.com/>
		# requires: linunace
		*.ace)
			unace v "$f"
			;;

		# SEA ARC archive
		# requires: arc
		*.arc)	arc v "$f"
			;;

		# Archimedes Spark archives from RiscOS
		# requires: nspark
		# Extension is really .arc, but that conflicts with SEA ARC
		*.spark)	nspark -l -v "$f"
			;;

		# ARJ archive
		# requires: unarj
		*.arj)	unarj l "$f"
			;;

		# BUN archive
		# See http://www.star.le.ac.uk/~tjg/bun/
		# requires: bun
		# (Untested)
		*.bun)	bun tv "$f"
			;;

		# CAB archive
		# requires: cabextract
		*.cab)	cabextract -l "$f"
			;;

		# Compound File Compiler (snd+gfx--see sasteroids)
		*.cf)	cvf "$f"
			;;

		# Microsoft Compressed HTML
		# requires: chmlib
		*.chm)	enum_chmLib "$f"
			;;

		# compressed cpio(1L) archive
		# requires: cpio, gzip
		*.cpio.gz | *.cpio.Z | *.cpio.z | *.cgz)
			gzip -dc "$f" | cpio --list --verbose
			;;

		# bzip2-compressed cpio(1L) archive
		# requires: cpio, bzip2
		*.cpio.bz2)
			bzip2 -dc "$f" | cpio --list --verbose
			;;

		# cpio(1L) archive
		# requires: cpio
		*.cpio)	cpio --list --verbose < "$f"
			;;

		# dar archive
		# See http://dar.linux.free.fr/
		# requires: cpio
		# (Untested)
		# May need `basename "`basename "$f"`"`
		*.dar)	dar -l "$f"
			;;

		# Debian distribution archive
		# requires: binutils, tar
		*.deb)
			if [ -e /tmp/data.tar.gz ] ; then
				echo "$0: won't overwrite temporary file /tmp/data.tar.gz" 1>&2
			else
				ar p "$f" data.tar.gz > /tmp/data.tar.gz
				# Recursive call to fv
				"$0" /tmp/data.tar.gz
				rm -f /tmp/data.tar.gz
			fi
			;;

		# Familiar distribution archive
		# requires: binutils, tar, gzip, grep, file
		# TODO: fix this to use a temporary file
		*.ipk)
			if [ -e /tmp/data.tar.gz ] ; then
				echo "$0: won't overwrite temporary file /tmp/data.tar.gz" 1>&2
			else
 				# Detect the old or new style ipk format
 				if file "$f" | grep -iq Debian ; then
					ar p "$f" data.tar.gz > /tmp/data.tar.gz
 				else
					gzip -dc "$f" | (cd /tmp; tar xf - data.tar.gz)
				fi
				# Recursive call to fv
				"$0" /tmp/data.tar.gz
				rm -f /tmp/data.tar.gz
			fi
			;;

		# I've forgotten what this is
		*.ha)	ha l "$f"
			;;

		# HP48 distribution archives as posted to comp.sources.hp48
		# requires: sed
		*.hp)	sed -n -e 's/^\(BEGIN_.*\) /\1	/p' "$f"
			;;

		# Macintosh BinHex encoding
		# requires: macutils
		*.hqx)	hexbin -il "$f"
			;;

		# ISO9660 filesystem image file
		# requires: cdrecord
		*.iso)
			isoinfo -l -R -i "$f"
			;;

		# LHARC archive
		# requires: lha
		*.lha | *.lzh)
			lha v "$f"
			;;

		# LZOP compressed file
		# requires: lzop
		*.lzo)
			lzop -vl "$f"
			;;

		# Macintosh MacBinary encoding
		# (Is .mac the most common suffix for MacBinary files?)
		# requires: macutils
		*.mac)	macsave -il < "$f"
			;;

		# Message catalogue archive and library maintainer
		# Found this one on SCO UNIX
		# (Don't know what kind of suffix this one uses)
		# (Untested)
		#*.mar)	mar tv "$f"
		#	;;

		# Meta Archive
		# See http://www.emantic.co.uk/mark/
		# requires: mar
		# (Untested)
		*.mar)	mar -t "$f"
			;;

		# Parity Archive ver. 2
		# See http://www.dakotacom.net/~donut/programs/par2ls.html
		# requires: par2ls
		# (Untested)
		*.par2)	par2ls "$f"
			;;

		# SysV packager (SCO UNIX, IRIX)
		# (Don't know what kind of suffix this one uses)
		# (Untested)
		*.pkg)	pkginfo -d "`dirname "$f"`" -l "`basename "$f"`"
			;;

		# RAR compressed archive
		# requires: unrar
		*.rar)
			unrar l "$f"
			;;

		# Red Hat RPM(8) package
		# requires: rpm
		*.rpm | *.spm)	rpm -qilvp "$f"
			;;

		# Red Hat RPP package
		# requires: tar, cpio, gzip
		*.rpp)	tar xOvf "$f" cpio-archive.gz | gzip -dc | cpio --list --verbose
			;;

		# SymbianOS SIS installable package
		# requires: DumpSIS (http://www.geocities.com/jfldars/dumpsis.html)
		*.sis)	DumpSIS.pl "$f"
			;;

		# Macintosh SIT archive
		# requires: macutils
		*.sit)	macunpack -il "$f"
			;;

		# shell archives
		# There are many kinds of shar archives with greatly differing
		# formats. This code attempts to find a manifest listing in the
		# comments at the top of the file in several different formats.
		# requires: sed
		*.shar | *.sh)
			# display warning
			echo 'NOTE: shar contents listing is not completely reliable'
			# GNU shar 4.1
			sed -n -e '1,/^# This shar contains/d' -e '/^#$/,$d' -e 's/^# //p' "$f"
			# shar type A
			sed -n -e '1,/with \/bin\/sh/d' -e '/^#$/,$d' -e 's/^#[ 	]/	/p' "$f"
			# shar type B
			sed -n -e '/^#/!d' -e '/^# end of/d' -e 's/^#[ 	]//' -e '/^Contents/,$p' "$f"
			;;

		# Apple II archive formats
		*.shk | *.sh2)
			nulib tv "$f"
			;;

		# Commodore 64 archive formats
		# *.arc is also used by the arc program above
		# requires: fvcbm
		*.sda | *.sfx | *.d64 | *.x64 | *.t64 | *.lnx | *.lzh | \
		*.lha | *.n64 | *.arc | *.lbr | *.[psrud]00)
			fvcbm "$f"
			;;

		# Netscape .nif
		# eCos package .epk
		# QNX package .qpk
		# compressed tar(1) archive
		# requires: tar, gzip
		*.nif | *.epk | *.qpk | \
		*.tar.z | *.tar.Z | *.tar.gz | *.tgz | *.taz)
			#tar tzvf "$f"
			gzip -dc "$f" | tar tvf -
			;;

		# Stampede Linux SLP package
		# bzip2 compressed tar(1) archive
		# requires: tar, bzip2
		*.slp | \
		*.tar.bz2)
			bzip2 -dc "$f" | tar tvf -
			;;

		# tar(1) archive
		# requires: tar
		*.tar)	tar tvf "$f"
			;;

		# uuencoded file
		# requires: sed
		*.uu | *.uue | *.uua)
			sed -n 's/^begin //p' "$f"
			;;

		# zipped archive
		# Java jar
		# Mozilla Java Cross Platform Installer
		# Perl package
		# requires: unzip
		*.zip | *.jar | *.xpi | *.par)
			unzip -v "$f"
			;;

		# ZOO archive
		# requires: zoo
		*.zoo)	zoo -list "$f"
			;;

		# ZZIP archive
		# See http://debin.org/zzip/
		# requires: zzip
		# (Untested)
		*.zz)	zzip l "$f"
			;;

# Compressed files must come after compressed archives

		# compressed or gzipped file
		# requires: gzip
		*.gz | *.Z | *.z)
			gzip -vl "$f"
			;;

		# bzip2 compressed file
		# requires: fileutils, textutils, sh-utils, sed
		*.bz2)
		    if [ -e "$f" ] ; then
				echo "method  crc      date           compressed uncompressed_name"
				FILEINFO=`ls -l "$f"`
				#FILESIZE=`echo "$FILEINFO" | cut -c 30-42`
				FILESIZE=`echo "$FILEINFO" | awk '{print $5}'`
				#FILEDATE=`echo "$FILEINFO" | cut -c 43-54`
				FILEDATE=`echo "$FILEINFO" | awk '{print $6 " " $7 " " $8}'`
				FILENAME=`basename "$f" .bz2`
				#FILECRC=`od -A n -j 10 -N 4 -t x1 "$f" | sed "s/ //g"`
				FILECRC=`hexdump -e '4/1 "%02x" "\n"' -n 4 -s 10 "$f"`
				#FILECOMPRESS=`od -A n -j 3 -N 1 -t c "$f" | sed "s/ //g"`
				FILECOMPRESS=`hexdump -e '"%_c" "\n"' -n 1 -s 3 "$f"`
				printf "bzip2-%s %8s %s %13s %s" "$FILECOMPRESS" "$FILECRC" "$FILEDATE" "$FILESIZE" "$FILENAME"
			else
				echo "$f: No such file or directory"
			fi
			;;

# Unknown format
		*)	echo "$f: Not a known archive" 1>&2
			exit 2
			;;

	esac
	# Save the return code of the last program run so we can return that from
	# the script. This won't work for some of the archive listers, but it's
	# better than nothing.
	rc=$?
	echo ""
done
exit $rc
