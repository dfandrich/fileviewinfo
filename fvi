#!/bin/sh
# fvi - file metainformation lister
# Placed into the public domain by Dan Fandrich <dan@coneharvesters.com>
# See the file COPYING for details of how CC0 applies to this file.
#
# Format of file type entries in this file:
#
# * The requires: comment lines below the file type refer to the
#   software package(s) required to view the metadata of the file
#   (RedHat package names are listed in most cases).  This information is not
#   currently used by the program but is merely a note to the curious user
#   who wants to know how to look inside a new file type.
#
# * An filetype_label line must be found within the code handling each
#   file type.  Any special shell characters must be enclosed in single
#   quotes.  These lines are listed (along with the Also lines) using the
#   -v -l option.
#
# * A comment line beginning See gives a URL with more information about
#   the file format. This information is not currently used by
#   the program but is merely a note to the curious user.
#
# * A comment line beginning Also gives an alternative file name for the
#   following file type similar to the format of filetype_label, except
#   that the comment ends with the file extension and special shell characters
#   must not be quoted.  These lines are listed along with the filetype_label
#   lines using the -v -l option.
#
# * Each case entry line matching a file extension must have a tab character
#   in the first position.  These extensions are listed using the -l option.

usage () {
	echo 'fvi ver. 2.1'
	echo 'Displays metadata for many file types.'
	echo ''
	echo 'Usage: fvi [-v] [-?] [-h] [-l] [-t type] file1 [ file2 ... ]'
	echo '  -v     Show verbose output (more than once for more verbosity)'
	echo '  -h,-?  Show this help'
	echo '  -l     List supported file extensions (or file types with -v)'
	echo '  -t     Treat the files as having the specified file extension'
	exit 3
}

if [ X"$1" = X"-v" ] ; then
	FV_VERBOSE=1
	shift
	if [ X"$1" = X"-v" ] ; then
		FV_VERBOSE=2
		shift
	fi
fi

if [ $# -eq 0 -o X"$1" = X"-?" -o X"$1" = X"-h"  ] ; then
	usage
fi

if [ X"$1" = X"-l" ] ; then
	# requires: textutils, sed
	if [ X"$FV_VERBOSE" != X ] ; then
		# Scan this script looking for label lines and Also comments
		sed -n -e "s/'//g" -e 's/^[^#]\+filetype[_]label //p' \
		 -e 's/^[ 	]*# Also \(.*\) [\.a-z0-9A-Z,_]*$/\1/p' "$0" | sort -f | uniq
	else
		echo 'Supported file extensions:'
		# Scan this script looking for wildcard case statement entries
		sed -n -e 's/^[ 	][ 	]*\(\*[^#)]*\)[)\\].*$/\1/p' "$0" | sed -e 's/ *| */\
/g' | sed -e 's/\*//g' -e '/^\**$/d' | sort -f | uniq | fmt
	fi
	exit
fi

staticfiletype=""
if [ X"$1" = X"-t" ] ; then
	staticfiletype="$2"
	# Make sure file type starts with . for comparision purposes
	case "$staticfiletype" in
		.*) ;;
		 *)	staticfiletype=".$staticfiletype"
		    ;;
	esac
	shift
	shift
fi

if [ $# -eq 0 ] ; then
	usage
fi

filetype_label () {
	# Display the file type in verbose mode
	if [ X"$FV_VERBOSE" != X ] ; then
		echo "$*"
		if [ X"$FV_VERBOSE" = X2 ] ; then
		  # echo the actual command used to display the file
		  set -x
		fi
	fi
}

for f in "$@" ; do
	if [ X"$staticfiletype" = X"" ] ; then
		filetype=`basename "$f"`
	else
		filetype="$staticfiletype"
	fi
	echo "$f":
	case "$filetype" in

		# requires: unzip, xmlstarlet
		*.3mf)	filetype_label 3MF 3-D Manufacturing file
			TMPFILE="$(mktemp)"
			unzip -qc "$f" 3D/3dmodel.model > "${TMPFILE}"
			# This could probably be combined into a single xmlstarlet invocation for speed
			printf 'Name: '
			xmlstarlet sel -t -v "/*[local-name()='model']/*[local-name()='metadata'][@name]" < "${TMPFILE}"
			printf '\n'
			xmlstarlet sel -t -v "count(/*[local-name()='model']/*[local-name()='resources']/*[local-name()='object'])" < "${TMPFILE}"
			printf ' object(s)\n'
			xmlstarlet sel -t -v "count(/*[local-name()='model']/*[local-name()='build']/*[local-name()='item'])" < "${TMPFILE}"
			printf ' build item(s)\n'
			xmlstarlet sel -t -v "count(/*[local-name()='model']/*[local-name()='resources']/*[local-name()='basematerials']/*[local-name()='base'])" < "${TMPFILE}"
			printf ' material(s)\n'
			rm -f "${TMPFILE}"
			;;

		# See http://p7zip.sourceforge.net/
		# requires: p7zip
		*.7z)	filetype_label 7zip archive
			7za l -slt -- "$f" | sed '/^----------/,$d'
			;;

		# requires: unzip, xmlstarlet
		*.amf)	filetype_label Additive Manufacturing File
			if [ "$(dd if="$f" bs=1 count=2 2>/dev/null )" = "PK" ]; then
				# If the amf file is zip compressed, uncompress it first
				TMPFILE=$(mktemp)
				INFILE="${TMPFILE}"
				funzip "$f" > "$INFILE"
			else
				TMPFILE=
				INFILE="$f"
			fi
			# BUG: There will be no separators between names if they come from
			# multiple objeccts. But, it's often the case that there is only a single
			# object
			xmlstarlet sel  -t \
				-o 'Name: ' -v "/amf/metadata[@type='name'] | /amf/object/metadata[@type='name']" -n  \
			    -v "count(/amf/object)" -o " object(s)" -n \
			    -v "count(/amf/material)" -o ' material(s)' -n \
				< "$INFILE"
			if [ -n "$TMPFILE" ]; then
				rm -f "$TMPFILE"
			fi
			;;

		# requires Android SDK
		*.apk)	filetype_label Android package
			aapt d badging "$f"
			;;

		# See https://sourceforge.net/projects/avifile/
		# requires: avifile-samples
		*.avi)	filetype_label Microsoft Audio Video Interleaved
			avitype "$f"
			;;

		# requires: openssl
		*.crl) filetype_label X509 CRL
			openssl crl -text -in "$f"
			;;

		# requires: tar
		*.depot) filetype_label HP-UX package
			tar xOf - catalog/INDEX < "$f"
			;;

		# requires: tar, gzip
		*.depot.gz) filetype_label HP-UX package
			gzip -dc -- "$f" | tar xOf - catalog/INDEX
			;;

		# requires: openssl
		*.der) filetype_label DER certificate
			openssl x509 -text -inform der -in "$f"
			;;

		# needs Android SDK
		*.dex)	filetype_label Android Java class file
			dexlist -- "$f"
			;;

		# (Untested)
		*.dmg)	filetype_label Mac OS X Disk Image
			hdiutil imageinfo "$f"
			;;

		# Also 
		# requires: ebook-tools
		*.epub)	filetype_label EPub Document
			einfo "$f"
			;;


		# (Untested)
		# requires: pev
		*.exe)	filetype_label Windows executable
			pescan -v "$f"
			;;

		# requires: flac
		*.flac)	filetype_label FLAC audio
			metaflac --list -- "$f"
			;;

		# requires: libungif-progs
		*.gif)	filetype_label GIF image
			giftext < "$f"
			;;

		# See https://pypi.org/project/gpxpy/
		# requires: gpxinfo || gpxpy
		*.gpx)	filetype_label GPS exchange format file
			gpxinfo "$f"
			;;

		# requires: libheif
		*.heic | *.heif)	filetype_label HEIF image
			heif-info -- "$f"
			;;

		# See http://www.handhelds.org/ (defunct as of 2021)
		# requires: binutils, file, grep, gzip, tar
		*.ipk)	filetype_label Itsy package
			# Detect the old or new style ipk format
			if file "$f" | egrep -iq 'Debian|ar archive' ; then
				ar -p "$f" control.tar.gz | gzip -dc | tar xOf -
			else
				# Internal file name may or may not be prefixed with ./
				# which is what the \* catches.
				gzip -dc -- "$f" | tar xOf - --wildcards \*control.tar.gz | gzip -dc | tar xOf -
			fi
			;;

		# requires: cdrecord
		*.iso)	filetype_label ISO9660 filesystem image file
			isoinfo -d -i "$f"
			;;

		# requires: jhead || exiv2 || exif
		*.jpg | *.jpeg | *.jfif)	filetype_label JPEG image
			jhead "$f" || exiv2 pr "$f" || exif "$f"
			;;

		# requires: openssl
		*.key) filetype_label Private key
			openssl asn1parse -in "$f"
			;;

		# requires: fv, lzip
		*.lz)	filetype_label lzip-compressed file
			fv -t lz "$f"
			;;

		# requires: fv, lzop
		*.lzo)	filetype_label LZOP-compressed file
			fv -t lzo "$f"
			;;

		# requires: libquicktime-progs
		*.m4a)	filetype_label Quicktime audio
			qtinfo "$f"
			;;

		# requires: gettext
		# requires: sed
		*.mo) filetype_label Binary message catalog file
			msgunfmt -- "$f" | sed '/^$/,$d'
			;;

		# requires: mkvtoolnix
		*.mkv | *.webm) filetype_label Matroska video file
			mkvinfo "$f"
			;;

		# requires: python-id3 || id3ed || mp3info || id3lib || id3v2 || mpgtx
		*.mp3)	filetype_label MP3 audio file
			id3v2 -l "$f" || listid3v2.py "$f" || id3ed -i "$f" || mp3info -- "$f" || id3info -- "$f" || tagmp3 show "$f"
			;;

		# requires: libquicktime-progs
		*.mp4 | *.mpg4 | *.mov | *.qt | *.3gp)	filetype_label Quicktime video
			qtinfo "$f"
			;;

		# requires: mpgtx
		*.mpg | *.mpeg | *.mpe | *.m1v | *.m2v)	filetype_label MPEG video
			mpginfo -- "$f"
			;;

		# requires: binutils
		*.o)	filetype_label Object file
			objdump -afph -- "$f"
			;;

		# requires: vorbis-tools
		*.ogg | *.ogv)	filetype_label OGG audio/video
			ogginfo -- "$f"
			;;

		# requires: xpdf
		*.pdf)	filetype_label Portable Document Format document
			pdfinfo -- "$f"
			;;

		# Also X.509 certificate .crt
		# Also X.509 CA certificate .cacrt
		# requires: openssl || java-X-openjdk
		*.pem | *.cacrt | *.crt) filetype_label PEM certificate
			openssl crl2pkcs7 -nocrl -certfile "$f" | openssl pkcs7 -print_certs -text -noout || keytool -printcert -v -file "$f"
			;;

		# requires: pngtools
		*.png)	filetype_label Portable Network Graphics image
			pnginfo "$f"
			;;

		# requires: netpbm
		*.ppm | *.pbm | *.pgm | *.pam | *.pnm)	filetype_label Portable pixmap image
			pamfile -- "$f"
			;;

		# requires: unrar
		*.rar | *.rsn)	filetype_label RAR compressed archive
			unrar vta -sl0 -idc -- "$f"
			;;

		# See https://www.rpm.org/
		# requires: rpm
		*.rpm | *.spm)	filetype_label Red Hat RPM package
			rpm -qip -- "$f"
			;;

		# requires: fv, python
		*.rz)	filetype_label rzip archive
			fv -t rz "$f"
			;;

		# See https://sourceforge.net/projects/sistk/
		# requires: DumpSIS
		*.sis)	filetype_label SymbianOS SIS installable package
			DumpSIS.pl -e -- "$f" | sed '/^Files$/,$d'
			;;

		# See https://github.com/plougher/squashfs-tools
		# requires: squashfs
		*.sqsh | *.squashfs) filetype_label Squashfs filesystem image
			unsquashfs -s "$f"
			;;

		# requires: python >= 3
		*.stl)	filetype_label STL model file
			# strings is to strip out any nil bytes
			if [ "$(dd if="$f" bs=1 count=6 2>/dev/null | strings -1)" = "solid " ]; then
				# ASCII stl format
				sed -n -E -e '1s/^solid +//p' "$f"
				grep "^[[:space:]]*facet " "$f" | wc -l | tr -d '\n'
				echo " facets"
			else
				# Binary stl format
				python3 - "$f" <<EOF
import struct, sys
with open(sys.argv[1], 'rb') as f:
	comment = f.read(80)
	z = comment.find(b'\x00')
	if z >= 0:
		comment = comment[0:z]
	comment = comment.strip(b'\n').replace(b'\n', b' ')
	# This character encoding likely isn't always correct
	print(comment.decode('iso-8859-1'))
	length = struct.unpack('<I', f.read(4))[0]
print('%0d facets' % length)
EOF
			fi
			;;

		# requires: imagemagick, gzip
		*.svgz)	filetype_label Compressed Scalable Vector Graphic image file
			zcat "$f" | identify -verbose -
			;;

		# See http://www.encode.ru/tc/
		# requires: python >= 3
		*.tc)	file_label tc-compressed file
			fv -t tc "$f"
			;;

		# Also Digital Negative Raw Image .dng
		# requires: libtiff-progs
		*.tif | *.tiff | *.dng)	filetype_label Tagged Image File Format image
			tiffinfo -- "$f" || tiffdump -- "$f"
			;;

		# requires: bittorrent
		*.torrent)	filetype_label BitTorrent torrent file
			torrentinfo-console "$f"
			;;

		*.wav)	filetype_label WAV audio file
			wavplay -i -- "$f"
			;;

		# zip archive .zip
		# Also Android package .apk
		# Also Java jar file .jar
		# Also Mozilla Java Cross Platform Installer .xpi
		# Also Perl package .par
		# Also Winamp compressed skin file .wsz,.wal
		# Also Google Earth .kmz
		# Also iPod Game .ipg
		# Also OpenOffice Impress Presentation .sxi
		# Also OpenOffice Drawing .sxd
		# Also OpenOffice Writer Document .sxw
		# Also OpenDocument .odt
		# Also OpenDocument Drawing .odg
		# Also OpenDocument Spreadsheet .ods
		# Also OpenDocument Presentation .odp
		# Also OpenDocument Formula .odf
		# Also OpenDocument .fodt
		# Also OpenDocument Drawing .fodg
		# Also OpenDocument Spreadsheet .fods
		# Also OpenDocument Presentation .fodp
		# Also OpenDocument Drawing Template .otg
		# Also OpenDocument Presentation Template .otp
		# Also OpenDocument Spreadsheet Template .ots
		# Also OpenDocument Presentation Template .otp
		# Also Quake3 packed file .pk3
		# Also Nokia mobile phone theme .nth
		# Also Microsoft Office Open XML .docx
		# Also Microsoft Office Open XML with Macros .docm
		# Also EPub Document .epub
		# Also Java Web Start .war
		# Also XML Paper Specification .xps
		# Also Syllable resource package .resource
		# Also Syllable application package .application
		# Also (unknown 3D package) .f3d
		# Also Python package .egg
		# Also Python wheel package .whl
		# Also Krita image .kra
		# SkyOS .pkg file are in .zip format, but the extension conflicts
		# requires: unzip
		*.zip | *.jar | *.xpi | *.par | *.wsz | *.wal | *.kmz | \
		*.sxi | *.sxd | *.sxw | *.pk3 | *.ipg | *.nth | *.odt | \
		*.ods | *.odp | *.odg | *.odf | *.fodt | *.fods | *.fodp | *.fodg | \
		*.otp | *.otg | *.ots | \
		*.docx | *.epub | *.apk | *.war | *.xps | *.resource | \
		*.application | *.docm | *.f3d | *.egg | *.kra | *.whl)
			filetype_label ZIP archive
			zipinfo -h -z "$f" | grep -v "^$"; zipinfo -l "$f" | tail -1
			;;

# Catch-all handlers. These must appear after the rest because they include
# more general extensions and occasionally duplicate but less-desirable
# handlers of previous extensions.

		# Catch-all bitmapped image information displayer
		# requires: imagemagick
		*.raw | *.pcl | *.xpm | *.jbig | *.jp2 | *.png | *.fpx | *.pcx | \
		*.xbm | *.webp | *.heic \
		)	filetype_label Bitmapped image file
			identify -verbose -- "$f"
			;;

		# Also Windows Media compressed skin file .wmz
		# Catch-all vector information displayer
		# requires: imagemagick
		*.ps | *.eps | *.hpgl | *.fig | *.cgm | *.gplt | \
		*.rle | *.wmf | *.wmz | *.svg \
		)	filetype_label Vector image file
			identify -verbose -- "$f"
			;;

		# Catch-all font information displayer
		# requires: freetype2-demos
		*.ttf | *.pfa | *.pfb | *.otf \
		)	filetype_label Font file
			ftdump "$f"
			;;

		# Catch-all video and audio formats
		# requires: ffmpeg
		# First batch of extensions come from "ffmpeg -formats"
		# which lists some things that probably aren't actual file extensions
	*.3g2 | *.3gp | *.4xm | *.MTV | *.RoQ | *.aac | *.ac3 | *.adts | *.aiff | \
	*.alaw | *.amr | *.apc | *.ape | *.asf | *.asf_stream | *.au | *.avi | \
	*.avs | *.bethsoftvid | *.c93 | *.crc | *.daud | *.dirac | *.dsicin | *.dts | \
	*.dv | *.dv1394 | *.dvd | *.dxa | *.ea | *.ffm | *.film_cpk | *.flac | *.flic | \
	*.flv | *.framecrc | *.gif | *.gxf | *.h261 | *.h263 | *.h264 | *.idcin | \
	*.image2 | *.image2pipe | *.ingenient | *.ipmovie | *.libnut | *.m4v |\
	*.matroska | *.mjpeg | *.mm | *.mmf | *.mov | *.mov | *.m4a | \
	*.mj2 | *.mp2 | *.mp3 | *.mp4 | *.mpc | *.mpeg | *.mpeg1video | \
	*.mpeg2video | *.mpegts | *.mpegtsraw | *.mpegvideo | *.mpjpeg | *.mulaw |\
	*.mxf | *.nsv | *.null | *.nut | *.nuv | *.ogg | *.oss | *.psp | *.psxstr | \
	*.rawvideo | *.redir | *.rm | *.rtp | *.rtsp | *.s16be | *.s16le | *.s8 | \
	*.sdp | *.shn | *.siff | *.smk | *.sol | *.svcd | *.swf | *.thp | \
	*.tiertexseq | *.tta | *.txd | *.u16be | *.u16le | *.u8 | *.vc1 | \
	*.vcd | *.video4linux | *.video4linux2 | *.vmd | *.vob | *.voc | \
	*.wav | *.wc3movie | *.wsaud | *.wsvqa | *.wv | *.x11grab | *.yuv4mpegpipe | \
	\
	*.mpg4 | *.wmv | *.mts | \
	*.amv | *.ram \
		)	filetype_label Video or audio file
			ffmpeg -i "$f"
			;;

# Plain compressed files must come after otherwise compressed files

		# requires: fv, bzip2
		# Also Stampede Linux package .slp
		# Also bzip2-compressed tar archive .tbz, .tbz2
		*.slp | *.tbz | *.tbz2 | \
		*.bz2)	filetype_label bzip2-compressed file
			fv -t bz2 "$f"
			;;

		# requires: fv, gzip
		*.cgz | *.pet | \
		*.nif | *.epk | *.qpk | *.qpr | *.fpm | *.rub | \
		*.kpr | *.chrt | *.kfo | *.flw | *.kil | *.ksp | *.kwd | \
		*.tgz | *.taz | \
		*.gz | *.Z | *.z)	filetype_label gzip-compressed file
			fv -t gz "$f"
			;;

		# requires: fv, lzma
		# Also Tukaani Linux package .tlz
		*.tlz | \
		*.lzma)	filetype_label LZMA compressed file
			fv -t lzma "$f"
			;;

		# requires: fv, xz
		# Also xz-compressed tar archive .txz
		*.txz | \
		*.xz)	filetype_label XZ compressed file
			fv -t xz "$f"
			;;

		# requires: fv, zstd
		*.zst)	filetype_label zstd-compressed file
			fv -t zst "$f"
			;;

		# Unknown format
		# requires: file
		*)	echo "$filetype: Unsupported file format." 1>&2
			file "$f" 1>&2
			# Indicate that an error has occurred
			false
			;;

	esac
	if [ X"$FV_VERBOSE" = X2 ] ; then
	  set +x
	fi
	# Save the return code of the last program run so we can return that from
	# the script. This won't work for some of the metadata programs, but it's
	# better than nothing.
	rc=$?
	echo ""
done
exit $rc
